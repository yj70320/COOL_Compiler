Nonterminals useless in grammar

    expression_list
    case_list
    branch


Terminals unused in grammar

    ELSE
    FI
    IF
    IN
    LET
    LOOP
    POOL
    THEN
    WHILE
    CASE
    ESAC
    OF
    DARROW
    NEW
    ISVOID
    NOT
    ERROR


Rules useless in grammar

   25 expression_list: ε
   26                | expression_list expression

   27 case_list: case_list branch ';'
   28          | branch ';'

   29 branch: OBJECTID ':' TYPEID DARROW expression
   30       | error ';'


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS error ';'

    7 feature_list: ε
    8             | feature_list feature

    9 feature: OBJECTID ':' TYPEID ASSIGN expression ';'
   10        | OBJECTID ':' TYPEID ';'
   11        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
   12        | error ';'

   13 formal_list: ε
   14            | formal_list formal
   15            | error ','

   16 formal: OBJECTID ':' TYPEID

   17 expression: INT_CONST
   18           | BOOL_CONST
   19           | STR_CONST
   20           | OBJECTID
   21           | OBJECTID ASSIGN expression
   22           | expression '+' expression
   23           | expression '-' expression
   24           | expression LE expression


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 11
    ')' (41) 11
    '+' (43) 22
    ',' (44) 15
    '-' (45) 23
    ':' (58) 9 10 11 16
    ';' (59) 4 5 6 9 10 11 12
    '{' (123) 4 5 11
    '}' (125) 4 5 11
    error (256) 6 12 15
    CLASS (258) 4 5 6
    ELSE (259)
    FI (260)
    IF (261)
    IN (262)
    INHERITS (263) 5
    LET (264)
    LOOP (265)
    POOL (266)
    THEN (267)
    WHILE (268)
    CASE (269)
    ESAC (270)
    OF (271)
    DARROW (272)
    NEW (273)
    ISVOID (274)
    STR_CONST <symbol> (275) 19
    INT_CONST <symbol> (276) 17
    BOOL_CONST <boolean> (277) 18
    TYPEID <symbol> (278) 4 5 9 10 11 16
    OBJECTID <symbol> (279) 9 10 11 16 20 21
    ASSIGN (280) 9 21
    NOT (281)
    LE (282) 24
    ERROR (283)


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    program <program> (39)
        on left: 1
        on right: 0
    class_list <classes> (40)
        on left: 2 3
        on right: 1 3
    class <class_> (41)
        on left: 4 5 6
        on right: 2 3
    feature_list <features> (42)
        on left: 7 8
        on right: 4 5 8
    feature <feature> (43)
        on left: 9 10 11 12
        on right: 8
    formal_list <formals> (44)
        on left: 13 14 15
        on right: 11 14
    formal <formal> (45)
        on left: 16
        on right: 14
    expression <expression> (46)
        on left: 17 18 19 20 21 22 23 24
        on right: 9 11 21 22 23 24


State 0

    0 $accept: • program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS • TYPEID '{' feature_list '}' ';'
    5      | CLASS • TYPEID INHERITS TYPEID '{' feature_list '}' ';'
    6      | CLASS • error ';'

    error   shift, and go to state 5
    TYPEID  shift, and go to state 6


State 2

    0 $accept: program • $end

    $end  shift, and go to state 7


State 3

    1 program: class_list •
    3 class_list: class_list • class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 8


State 4

    2 class_list: class •

    $default  reduce using rule 2 (class_list)


State 5

    6 class: CLASS error • ';'

    ';'  shift, and go to state 9


State 6

    4 class: CLASS TYPEID • '{' feature_list '}' ';'
    5      | CLASS TYPEID • INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 10
    '{'       shift, and go to state 11


State 7

    0 $accept: program $end •

    $default  accept


State 8

    3 class_list: class_list class •

    $default  reduce using rule 3 (class_list)


State 9

    6 class: CLASS error ';' •

    $default  reduce using rule 6 (class)


State 10

    5 class: CLASS TYPEID INHERITS • TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 12


State 11

    4 class: CLASS TYPEID '{' • feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 13


State 12

    5 class: CLASS TYPEID INHERITS TYPEID • '{' feature_list '}' ';'

    '{'  shift, and go to state 14


State 13

    4 class: CLASS TYPEID '{' feature_list • '}' ';'
    8 feature_list: feature_list • feature

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 17

    feature  go to state 18


State 14

    5 class: CLASS TYPEID INHERITS TYPEID '{' • feature_list '}' ';'

    $default  reduce using rule 7 (feature_list)

    feature_list  go to state 19


State 15

   12 feature: error • ';'

    ';'  shift, and go to state 20


State 16

    9 feature: OBJECTID • ':' TYPEID ASSIGN expression ';'
   10        | OBJECTID • ':' TYPEID ';'
   11        | OBJECTID • '(' formal_list ')' ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 21
    '('  shift, and go to state 22


State 17

    4 class: CLASS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 23


State 18

    8 feature_list: feature_list feature •

    $default  reduce using rule 8 (feature_list)


State 19

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list • '}' ';'
    8 feature_list: feature_list • feature

    error     shift, and go to state 15
    OBJECTID  shift, and go to state 16
    '}'       shift, and go to state 24

    feature  go to state 18


State 20

   12 feature: error ';' •

    $default  reduce using rule 12 (feature)


State 21

    9 feature: OBJECTID ':' • TYPEID ASSIGN expression ';'
   10        | OBJECTID ':' • TYPEID ';'

    TYPEID  shift, and go to state 25


State 22

   11 feature: OBJECTID '(' • formal_list ')' ':' TYPEID '{' expression '}' ';'

    error  shift, and go to state 26

    OBJECTID  reduce using rule 13 (formal_list)
    ')'       reduce using rule 13 (formal_list)

    formal_list  go to state 27


State 23

    4 class: CLASS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 4 (class)


State 24

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 28


State 25

    9 feature: OBJECTID ':' TYPEID • ASSIGN expression ';'
   10        | OBJECTID ':' TYPEID • ';'

    ASSIGN  shift, and go to state 29
    ';'     shift, and go to state 30


State 26

   15 formal_list: error • ','

    ','  shift, and go to state 31


State 27

   11 feature: OBJECTID '(' formal_list • ')' ':' TYPEID '{' expression '}' ';'
   14 formal_list: formal_list • formal

    OBJECTID  shift, and go to state 32
    ')'       shift, and go to state 33

    formal  go to state 34


State 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 5 (class)


State 29

    9 feature: OBJECTID ':' TYPEID ASSIGN • expression ';'

    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38

    expression  go to state 39


State 30

   10 feature: OBJECTID ':' TYPEID ';' •

    $default  reduce using rule 10 (feature)


State 31

   15 formal_list: error ',' •

    $default  reduce using rule 15 (formal_list)


State 32

   16 formal: OBJECTID • ':' TYPEID

    ':'  shift, and go to state 40


State 33

   11 feature: OBJECTID '(' formal_list ')' • ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 41


State 34

   14 formal_list: formal_list formal •

    $default  reduce using rule 14 (formal_list)


State 35

   19 expression: STR_CONST •

    $default  reduce using rule 19 (expression)


State 36

   17 expression: INT_CONST •

    $default  reduce using rule 17 (expression)


State 37

   18 expression: BOOL_CONST •

    $default  reduce using rule 18 (expression)


State 38

   20 expression: OBJECTID •
   21           | OBJECTID • ASSIGN expression

    ASSIGN  shift, and go to state 42

    $default  reduce using rule 20 (expression)


State 39

    9 feature: OBJECTID ':' TYPEID ASSIGN expression • ';'
   22 expression: expression • '+' expression
   23           | expression • '-' expression
   24           | expression • LE expression

    LE   shift, and go to state 43
    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    ';'  shift, and go to state 46


State 40

   16 formal: OBJECTID ':' • TYPEID

    TYPEID  shift, and go to state 47


State 41

   11 feature: OBJECTID '(' formal_list ')' ':' • TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 48


State 42

   21 expression: OBJECTID ASSIGN • expression

    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38

    expression  go to state 49


State 43

   24 expression: expression LE • expression

    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38

    expression  go to state 50


State 44

   22 expression: expression '+' • expression

    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38

    expression  go to state 51


State 45

   23 expression: expression '-' • expression

    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38

    expression  go to state 52


State 46

    9 feature: OBJECTID ':' TYPEID ASSIGN expression ';' •

    $default  reduce using rule 9 (feature)


State 47

   16 formal: OBJECTID ':' TYPEID •

    $default  reduce using rule 16 (formal)


State 48

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID • '{' expression '}' ';'

    '{'  shift, and go to state 53


State 49

   21 expression: OBJECTID ASSIGN expression •
   22           | expression • '+' expression
   23           | expression • '-' expression
   24           | expression • LE expression

    LE  shift, and go to state 43

    $default  reduce using rule 21 (expression)


State 50

   22 expression: expression • '+' expression
   23           | expression • '-' expression
   24           | expression • LE expression
   24           | expression LE expression •

    LE  error (nonassociative)

    $default  reduce using rule 24 (expression)


State 51

   22 expression: expression • '+' expression
   22           | expression '+' expression •
   23           | expression • '-' expression
   24           | expression • LE expression

    LE  shift, and go to state 43

    $default  reduce using rule 22 (expression)


State 52

   22 expression: expression • '+' expression
   23           | expression • '-' expression
   23           | expression '-' expression •
   24           | expression • LE expression

    LE  shift, and go to state 43

    $default  reduce using rule 23 (expression)


State 53

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' • expression '}' ';'

    STR_CONST   shift, and go to state 35
    INT_CONST   shift, and go to state 36
    BOOL_CONST  shift, and go to state 37
    OBJECTID    shift, and go to state 38

    expression  go to state 54


State 54

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression • '}' ';'
   22 expression: expression • '+' expression
   23           | expression • '-' expression
   24           | expression • LE expression

    LE   shift, and go to state 43
    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '}'  shift, and go to state 55


State 55

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' • ';'

    ';'  shift, and go to state 56


State 56

   11 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';' •

    $default  reduce using rule 11 (feature)
