Nonterminals useless in grammar

    expression_list
    case_list
    branch


Terminals unused in grammar

    ELSE
    FI
    IF
    IN
    LET
    LOOP
    POOL
    THEN
    WHILE
    CASE
    ESAC
    OF
    DARROW
    NEW
    ISVOID
    NOT
    ERROR


Rules useless in grammar

   22 expression_list: ε
   23                | expression_list expression

   24 case_list: case_list branch ';'
   25          | branch ';'

   26 branch: OBJECTID ':' TYPEID DARROW expression


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    6 feature_list: ε
    7             | feature_list feature

    8 feature: OBJECTID ':' TYPEID ASSIGN expression ';'
    9        | OBJECTID ':' TYPEID ';'
   10        | OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';'

   11 formal_list: ε
   12            | formal_list formal

   13 formal: OBJECTID ':' TYPEID

   14 expression: INT_CONST
   15           | BOOL_CONST
   16           | STR_CONST
   17           | OBJECTID
   18           | OBJECTID ASSIGN expression
   19           | expression '+' expression
   20           | expression '-' expression
   21           | expression LE expression


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10
    ')' (41) 10
    '+' (43) 19
    '-' (45) 20
    ':' (58) 8 9 10 13
    ';' (59) 4 5 8 9 10
    '{' (123) 4 5 10
    '}' (125) 4 5 10
    error (256)
    CLASS (258) 4 5
    ELSE (259)
    FI (260)
    IF (261)
    IN (262)
    INHERITS (263) 5
    LET (264)
    LOOP (265)
    POOL (266)
    THEN (267)
    WHILE (268)
    CASE (269)
    ESAC (270)
    OF (271)
    DARROW (272)
    NEW (273)
    ISVOID (274)
    STR_CONST <symbol> (275) 16
    INT_CONST <symbol> (276) 14
    BOOL_CONST <boolean> (277) 15
    TYPEID <symbol> (278) 4 5 8 9 10 13
    OBJECTID <symbol> (279) 8 9 10 13 17 18
    ASSIGN (280) 8 18
    NOT (281)
    LE (282) 21
    ERROR (283)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program <program> (38)
        on left: 1
        on right: 0
    class_list <classes> (39)
        on left: 2 3
        on right: 1 3
    class <class_> (40)
        on left: 4 5
        on right: 2 3
    feature_list <features> (41)
        on left: 6 7
        on right: 4 5 7
    feature <feature> (42)
        on left: 8 9 10
        on right: 7
    formal_list <formals> (43)
        on left: 11 12
        on right: 10 12
    formal <formal> (44)
        on left: 13
        on right: 12
    expression <expression> (45)
        on left: 14 15 16 17 18 19 20 21
        on right: 8 10 18 19 20 21


State 0

    0 $accept: • program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS • TYPEID '{' feature_list '}' ';'
    5      | CLASS • TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: class_list •
    3 class_list: class_list • class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    2 class_list: class •

    $default  reduce using rule 2 (class_list)


State 5

    4 class: CLASS TYPEID • '{' feature_list '}' ';'
    5      | CLASS TYPEID • INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 class_list: class_list class •

    $default  reduce using rule 3 (class_list)


State 8

    5 class: CLASS TYPEID INHERITS • TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 10


State 9

    4 class: CLASS TYPEID '{' • feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 11


State 10

    5 class: CLASS TYPEID INHERITS TYPEID • '{' feature_list '}' ';'

    '{'  shift, and go to state 12


State 11

    4 class: CLASS TYPEID '{' feature_list • '}' ';'
    7 feature_list: feature_list • feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 14

    feature  go to state 15


State 12

    5 class: CLASS TYPEID INHERITS TYPEID '{' • feature_list '}' ';'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 16


State 13

    8 feature: OBJECTID • ':' TYPEID ASSIGN expression ';'
    9        | OBJECTID • ':' TYPEID ';'
   10        | OBJECTID • '(' formal_list ')' ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 17
    '('  shift, and go to state 18


State 14

    4 class: CLASS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 19


State 15

    7 feature_list: feature_list feature •

    $default  reduce using rule 7 (feature_list)


State 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list • '}' ';'
    7 feature_list: feature_list • feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 20

    feature  go to state 15


State 17

    8 feature: OBJECTID ':' • TYPEID ASSIGN expression ';'
    9        | OBJECTID ':' • TYPEID ';'

    TYPEID  shift, and go to state 21


State 18

   10 feature: OBJECTID '(' • formal_list ')' ':' TYPEID '{' expression '}' ';'

    $default  reduce using rule 11 (formal_list)

    formal_list  go to state 22


State 19

    4 class: CLASS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 4 (class)


State 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' • ';'

    ';'  shift, and go to state 23


State 21

    8 feature: OBJECTID ':' TYPEID • ASSIGN expression ';'
    9        | OBJECTID ':' TYPEID • ';'

    ASSIGN  shift, and go to state 24
    ';'     shift, and go to state 25


State 22

   10 feature: OBJECTID '(' formal_list • ')' ':' TYPEID '{' expression '}' ';'
   12 formal_list: formal_list • formal

    OBJECTID  shift, and go to state 26
    ')'       shift, and go to state 27

    formal  go to state 28


State 23

    5 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' •

    $default  reduce using rule 5 (class)


State 24

    8 feature: OBJECTID ':' TYPEID ASSIGN • expression ';'

    STR_CONST   shift, and go to state 29
    INT_CONST   shift, and go to state 30
    BOOL_CONST  shift, and go to state 31
    OBJECTID    shift, and go to state 32

    expression  go to state 33


State 25

    9 feature: OBJECTID ':' TYPEID ';' •

    $default  reduce using rule 9 (feature)


State 26

   13 formal: OBJECTID • ':' TYPEID

    ':'  shift, and go to state 34


State 27

   10 feature: OBJECTID '(' formal_list ')' • ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 35


State 28

   12 formal_list: formal_list formal •

    $default  reduce using rule 12 (formal_list)


State 29

   16 expression: STR_CONST •

    $default  reduce using rule 16 (expression)


State 30

   14 expression: INT_CONST •

    $default  reduce using rule 14 (expression)


State 31

   15 expression: BOOL_CONST •

    $default  reduce using rule 15 (expression)


State 32

   17 expression: OBJECTID •
   18           | OBJECTID • ASSIGN expression

    ASSIGN  shift, and go to state 36

    $default  reduce using rule 17 (expression)


State 33

    8 feature: OBJECTID ':' TYPEID ASSIGN expression • ';'
   19 expression: expression • '+' expression
   20           | expression • '-' expression
   21           | expression • LE expression

    LE   shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    ';'  shift, and go to state 40


State 34

   13 formal: OBJECTID ':' • TYPEID

    TYPEID  shift, and go to state 41


State 35

   10 feature: OBJECTID '(' formal_list ')' ':' • TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 42


State 36

   18 expression: OBJECTID ASSIGN • expression

    STR_CONST   shift, and go to state 29
    INT_CONST   shift, and go to state 30
    BOOL_CONST  shift, and go to state 31
    OBJECTID    shift, and go to state 32

    expression  go to state 43


State 37

   21 expression: expression LE • expression

    STR_CONST   shift, and go to state 29
    INT_CONST   shift, and go to state 30
    BOOL_CONST  shift, and go to state 31
    OBJECTID    shift, and go to state 32

    expression  go to state 44


State 38

   19 expression: expression '+' • expression

    STR_CONST   shift, and go to state 29
    INT_CONST   shift, and go to state 30
    BOOL_CONST  shift, and go to state 31
    OBJECTID    shift, and go to state 32

    expression  go to state 45


State 39

   20 expression: expression '-' • expression

    STR_CONST   shift, and go to state 29
    INT_CONST   shift, and go to state 30
    BOOL_CONST  shift, and go to state 31
    OBJECTID    shift, and go to state 32

    expression  go to state 46


State 40

    8 feature: OBJECTID ':' TYPEID ASSIGN expression ';' •

    $default  reduce using rule 8 (feature)


State 41

   13 formal: OBJECTID ':' TYPEID •

    $default  reduce using rule 13 (formal)


State 42

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID • '{' expression '}' ';'

    '{'  shift, and go to state 47


State 43

   18 expression: OBJECTID ASSIGN expression •
   19           | expression • '+' expression
   20           | expression • '-' expression
   21           | expression • LE expression

    LE  shift, and go to state 37

    $default  reduce using rule 18 (expression)


State 44

   19 expression: expression • '+' expression
   20           | expression • '-' expression
   21           | expression • LE expression
   21           | expression LE expression •

    LE  error (nonassociative)

    $default  reduce using rule 21 (expression)


State 45

   19 expression: expression • '+' expression
   19           | expression '+' expression •
   20           | expression • '-' expression
   21           | expression • LE expression

    LE  shift, and go to state 37

    $default  reduce using rule 19 (expression)


State 46

   19 expression: expression • '+' expression
   20           | expression • '-' expression
   20           | expression '-' expression •
   21           | expression • LE expression

    LE  shift, and go to state 37

    $default  reduce using rule 20 (expression)


State 47

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' • expression '}' ';'

    STR_CONST   shift, and go to state 29
    INT_CONST   shift, and go to state 30
    BOOL_CONST  shift, and go to state 31
    OBJECTID    shift, and go to state 32

    expression  go to state 48


State 48

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression • '}' ';'
   19 expression: expression • '+' expression
   20           | expression • '-' expression
   21           | expression • LE expression

    LE   shift, and go to state 37
    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '}'  shift, and go to state 49


State 49

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' • ';'

    ';'  shift, and go to state 50


State 50

   10 feature: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';' •

    $default  reduce using rule 10 (feature)
